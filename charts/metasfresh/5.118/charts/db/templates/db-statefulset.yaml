apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "db.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "db.name" . }}
    chart: {{ template "db.chart" . }}
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  selector:
    matchLabels:
      release: "{{ .Release.Name }}"
      role: master
      app: {{ template "db.name" . }}
  serviceName: "db"  
  template:
    metadata:
      labels:
        release: "{{ .Release.Name }}"
        role: master
        app: {{ template "db.name" . }}
{{- if .Values.db.podLabels }}
{{ toYaml .Values.db.podLabels | indent 8 }}
{{- end }}
      {{- if .Values.db.podAnnotations }}
      annotations:
{{ toYaml .Values.db.podAnnotations | indent 8 }}
      {{- end }}
    spec:
      {{- if .Values.db.image.pullSecrets }}
      imagePullSecrets:
        {{- range .Values.db.image.pullSecrets }}
        - name: {{ . }}
        {{- end}}
      {{- end}}
      {{- if .Values.db.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.db.securityContext.fsGroup }}
        runAsUser: {{ .Values.db.securityContext.runAsUser }}
      {{- end }}
      {{- if .Values.db.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.db.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.db.tolerations }}
      tolerations:
{{ toYaml .Values.db.tolerations | indent 8 }}
      {{- end }}
      containers:
      - name: {{ template "db.fullname" . }}
        image: "{{ template "db.image" . }}"
        imagePullPolicy: {{ default "" .Values.db.image.pullPolicy | quote }}
        ports:
        - name: db
          containerPort: {{ .Values.db.port }}
        volumeMounts:
        - name: db-data
          mountPath: {{ .Values.db.persistence.path }}
          subPath: ""
      volumes:
      - name: db-data
        persistentVolumeClaim:
          claimName: db-data-pvc