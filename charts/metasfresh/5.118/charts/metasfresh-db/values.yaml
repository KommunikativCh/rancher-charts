## kommunikativch metasfresh-db image version
## ref: https://cloud.docker.com/repository/docker/kommunikativch/metasfresh-db/tags
##
image:
  # registry: docker.io
  repository: kommunikativch/metasfresh-db
  tag: 5.118
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: Always
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  pullSecrets:
    - dockerHubKommunikativSecret

## Cluster settings
cluster:
  enabled: true
  slaveCount: 1

networkPolicy:
  ## Enable creation of NetworkPolicy resources.
  ##
  enabled: false

  ## The Policy model to apply. When set to false, only pods with the correct
  ## client label will have network access to the port metasfresh-db is listening
  ## on. When true, metasfresh-db will accept connections from any source
  ## (with the correct destination port).
  ##
  allowExternal: false

##
## metasfresh-db parameters
##
db:
  port: 5432
  podLabels: {}
  ## metasfresh-db resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  # resources:
  #   requests:
  #     memory: 256Mi
  #     cpu: 100m

  ## metasfresh-db Node labels and tolerations for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
  # nodeSelector: {"beta.kubernetes.io/arch": "amd64"}
  # tolerations: []
  ## metasfresh-db pod annotations
  podAnnotations: {}
  ## metasfresh-db Service properties
  service:
    ##  metasfresh-db Service type
    type: ClusterIP

    ## Specify the nodePort value for the LoadBalancer and NodePort service types.
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    ##
    # nodePort:

    ## Provide any additional annotations which may be required. This can be used to
    ## set the LoadBalancer service type to internal only.
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
    ##
    annotations: {}
    loadBalancerIP:
  ## metasfresh-db Pod Security Context
  securityContext:
    enabled: true
    fsGroup: 1001
    runAsUser: 1001
  persistence:
    enabled: true

    ## The path the volume will be mounted at, useful when using different
    ## metasfresh-db images.
    path: /var/lib/postgresql/data

    ## The subdirectory of the volume to mount to, useful in dev environments and one PV for multiple services.
    subPath: db/data

    ## metasfresh-db data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: "storage-metasfresh-db"
    accessModes:
    - ReadWriteOnce
    size: 8Gi
