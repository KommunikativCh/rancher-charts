piVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: {{ template "metasfresh-db.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "metasfresh-db.name" . }}
    chart: {{ template "metasfresh-db.chart" . }}
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  selector:
    matchLabels:
      release: "{{ .Release.Name }}"
      role: master
      app: {{ template "metasfresh-db.name" . }}
  serviceName: "metasfresh-db"  
  template:
    metadata:
      labels:
        release: "{{ .Release.Name }}"
        role: master
        app: {{ template "metasfresh-db.name" . }}
{{- if .Values.db.podLabels }}
{{ toYaml .Values.db.podLabels | indent 8 }}
{{- end }}
      {{- if .Values.db.podAnnotations }}
      annotations:
{{ toYaml .Values.db.podAnnotations | indent 8 }}
      {{- end }}
    spec:
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
        {{- end}}
      {{- end}}
      {{- if .Values.db.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.db.securityContext.fsGroup }}
        runAsUser: {{ .Values.db.securityContext.runAsUser }}
      {{- end }}
      {{- if .Values.db.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.db.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.db.tolerations }}
      tolerations:
{{ toYaml .Values.db.tolerations | indent 8 }}
      {{- end }}
      containers:
      - name: {{ template "metasfresh-db.fullname" . }}
        image: "{{ template "metasfresh-db.image" . }}"
        imagePullPolicy: {{ default "" .Values.image.pullPolicy | quote }}
        {{- if .Values.master.args }}
        ports:
        - name: db
          containerPort: {{ .Values.db.port }}
        volumeMounts:
        - name: metasfresh-db-data
          mountPath: {{ .Values.db.persistence.path }}
          subPath: {{ .Release.Namespace }}/{{ .Values.db.persistence.subPath }}
      volumes:
        - name: metasfresh-db-data
          persistentVolumeClaim:
            claimName: metasfresh-db
  {{- if not .Values.master.persistence.enabled }}
      volumes:
      - name: "metasfresh-db-data"
        emptyDir: {}
  {{- else }}
  volumeClaimTemplates:
    - metadata:
        name: metasfresh-db-data
        labels:
          app: "{{ template "metasfresh-db.name" . }}"
          chart: {{ template "metasfresh-db.chart" . }}
          component: "db"
          release: {{ .Release.Name | quote }}
          heritage: {{ .Release.Service | quote }}
      spec:
        accessModes:
        {{- range .Values.db.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.db.persistence.size | quote }}
      {{- if .Values.db.persistence.storageClass }}
      {{- if (eq "-" .Values.db.persistence.storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: {{ .Values.db.persistence.storageClass | quote }}
      {{- end }}
      {{- end }}
  {{- end }}